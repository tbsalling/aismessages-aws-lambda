<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>dk.tbsalling.ais</groupId>
	<artifactId>aismessages-aws-lambda</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>aismessages-aws-lambda</name>

	<description>Serverless AIS message decoding using AWS lambda</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<awsRegion>eu-central-1</awsRegion>
		<s3Bucket>aismessages-aws-lambda</s3Bucket>
		<stackName>aismessages-aws-lambda</stackName>
		<s3Prefix>code/${project.groupId}:${project.artifactId}:${project.version}</s3Prefix>
		<skipLocalInvoke>true</skipLocalInvoke>
	</properties>

	<licenses>
		<license>
			<name>Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported (CC BY-NC-SA 3.0)</name>
			<url>http://creativecommons.org/licenses/by-nc-sa/3.0/</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<organization>
		<name>Thomas Borg Salling</name>
		<url>http://tbsalling.dk</url>
	</organization>

	<dependencies>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-lambda-java-core</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-lambda-java-events</artifactId>
			<version>2.2.7</version>
		</dependency>
		<dependency>
			<groupId>dk.tbsalling</groupId>
			<artifactId>aismessages</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1.1</version>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>log4j2.xml</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<forceCreation>true</forceCreation>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>11</source>
					<target>11</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.1</version>
				<configuration>
					<finalName>lambda</finalName>
					<createDependencyReducedPom>false</createDependencyReducedPom>
				</configuration>
				<executions>
					<execution>
						<id>shade</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<id>sam-local-invoke</id>
						<phase>verify</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>sam</executable>
							<arguments>
								<argument>local</argument>
								<argument>invoke</argument>
								<argument>-e</argument>
								<argument>event.json</argument>
							</arguments>
							<skip>${skipLocalInvoke}</skip>
						</configuration>
					</execution>
					<execution>
						<id>sam-package</id>
						<phase>install</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>aws</executable>
							<arguments>
								<argument>cloudformation</argument>
								<argument>package</argument>
								<argument>--region=${awsRegion}</argument>
								<argument>--template-file=template.yaml</argument>
								<argument>--output-template-file=target/sam.yaml</argument>
								<argument>--s3-bucket=${s3Bucket}</argument>
								<argument>--s3-prefix=${s3Prefix}</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>sam-deploy</id>
						<phase>deploy</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>aws</executable>
							<arguments>
								<argument>cloudformation</argument>
								<argument>deploy</argument>
								<argument>--region=${awsRegion}</argument>
								<argument>--template-file=target/sam.yaml</argument>
								<argument>--stack-name=${stackName}</argument>
								<argument>--capabilities=CAPABILITY_IAM</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>invoke</id>
			<properties>
				<skipLocalInvoke>false</skipLocalInvoke>
			</properties>
		</profile>
	</profiles>

	<developers>
		<developer>
			<id>tbsalling</id>
			<name>Thomas Borg Salling</name>
			<email>tbsalling@tbsalling.dk</email>
		</developer>
	</developers>

</project>
